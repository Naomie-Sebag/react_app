{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\naomi\\\\Downloads\\\\web_react_project\\\\frontend\\\\src\\\\components\\\\login.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport './navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\napp.use(cookieParser(\"secretcode\"));\napp.use(passport.initialize());\napp.use(passport.session()); //require(\"./passportConfig\")(passport);\n\nexport default class Login extends Component {\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n    this.onChangePersonName = this.onChangePersonName.bind(this); // this.onChangePersonPosition = this.onChangePersonPosition.bind(this);\n    // this.onChangePersonLevel = this.onChangePersonLevel.bind(this);\n\n    this.onChangePersonUserName = this.onChangePersonUserName.bind(this);\n    this.onChangePersonEmail = this.onChangePersonEmail.bind(this);\n    this.onChangePersonPassword = this.onChangePersonPassword.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      //   person_name: \"\",\n      //   person_position: \"\",\n      //   person_level: \"\",\n      fullName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    };\n  } // These methods will update the state properties.\n\n\n  onChangePersonName(e) {\n    this.setState({\n      fullName: e.target.value\n    });\n  }\n\n  onChangePersonUserName(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePersonPassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangePersonEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePersonPosition(e) {\n    this.setState({\n      person_position: e.target.value\n    });\n  }\n\n  onChangePersonLevel(e) {\n    this.setState({\n      person_level: e.target.value\n    });\n  } // This function will handle the submission.\n\n\n  onSubmit(e) {\n    e.preventDefault(); // When post request is sent to the create url, axios will add a new record(newperson) to the database.\n\n    const newperson = {\n      \"fullName\": this.state.fullName,\n      \"username\": this.state.username,\n      \"email\": this.state.email,\n      \"password\": this.state.password\n    };\n    axios.post(\"http://localhost:4000/app/login\", newperson).then(res => console.log(res.data)).catch(error => console.log(error)); // We will empty the state after posting the data to the database\n\n    this.setState({\n      //   person_name: \"\",\n      //   person_position: \"\",\n      //   person_level: \"\",\n      fullName: \"\",\n      username: \"\",\n      password: \"\",\n      email: \"\"\n    });\n  } // This following section will display the form that takes the input from the user.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"UserName of the person: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.username,\n            onChange: this.onChangePersonUserName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Person's password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.password,\n            onChange: this.onChangePersonPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Login\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Users/naomi/Downloads/web_react_project/frontend/src/components/login.js"],"names":["React","Component","axios","app","use","cookieParser","passport","initialize","session","Login","constructor","props","onChangePersonName","bind","onChangePersonUserName","onChangePersonEmail","onChangePersonPassword","onSubmit","state","fullName","username","email","password","e","setState","target","value","onChangePersonPosition","person_position","onChangePersonLevel","person_level","preventDefault","newperson","post","then","res","console","log","data","catch","error","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n// This will require to npm install axios\r\nimport axios from 'axios';\r\nimport './navbar.css';\r\n\r\n\r\napp.use(cookieParser(\"secretcode\"));\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\n//require(\"./passportConfig\")(passport);\r\n\r\n\r\nexport default class Login extends Component {\r\n  // This is the constructor that stores the data.\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangePersonName = this.onChangePersonName.bind(this);\r\n    // this.onChangePersonPosition = this.onChangePersonPosition.bind(this);\r\n    // this.onChangePersonLevel = this.onChangePersonLevel.bind(this);\r\n    this.onChangePersonUserName = this.onChangePersonUserName.bind(this);\r\n    this.onChangePersonEmail = this.onChangePersonEmail.bind(this);\r\n    this.onChangePersonPassword = this.onChangePersonPassword.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n    //   person_name: \"\",\r\n    //   person_position: \"\",\r\n    //   person_level: \"\",\r\n    fullName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n    };\r\n  }\r\n\r\n  // These methods will update the state properties.\r\n  onChangePersonName(e) {\r\n    this.setState({\r\n        fullName: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePersonUserName(e) {\r\n    this.setState({\r\n        username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePersonPassword(e) {\r\n    this.setState({\r\n        password: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePersonEmail(e) {\r\n    this.setState({\r\n        email: e.target.value,\r\n    });\r\n  }\r\n\r\n\r\n  onChangePersonPosition(e) {\r\n    this.setState({\r\n      person_position: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePersonLevel(e) {\r\n    this.setState({\r\n      person_level: e.target.value,\r\n    });\r\n  }\r\n\r\n// This function will handle the submission.\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // When post request is sent to the create url, axios will add a new record(newperson) to the database.\r\n    const newperson = {\r\n   \r\n    \"fullName\": this.state.fullName,\r\n    \"username\": this.state.username,\r\n    \"email\": this.state.email,\r\n    \"password\": this.state.password\r\n\r\n    };\r\n\r\n    axios\r\n       .post(\"http://localhost:4000/app/login\", newperson)\r\n      .then((res) => console.log(res.data))\r\n      .catch((error) => console.log(error));\r\n    // We will empty the state after posting the data to the database\r\n    this.setState({\r\n    //   person_name: \"\",\r\n    //   person_position: \"\",\r\n    //   person_level: \"\",\r\n    fullName: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\"\r\n    });\r\n  }\r\n\r\n  // This following section will display the form that takes the input from the user.\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: 20 }}>\r\n        <h3>Login</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>UserName of the person: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n            value={this.state.username}\r\n              onChange={this.onChangePersonUserName}\r\n            />\r\n          </div>\r\n         \r\n          <div className=\"form-group\">\r\n            <label>Person's password: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.password}\r\n              onChange={this.onChangePersonPassword}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Login\"\r\n              className=\"btn btn-primary\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}