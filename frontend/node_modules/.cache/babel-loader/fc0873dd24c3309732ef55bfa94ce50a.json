{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\naomi\\\\Downloads\\\\web_react_project\\\\frontend\\\\src\\\\App.js\";\nimport { observer } from 'mobx-react';\nimport userStore from './stores/userStore';\nimport LoginForm from './stores/LogginForm';\nimport InputField from './stores/InputField';\nimport SubmitButton from './stores/SubmitButton';\nimport './App.css';\nimport React from 'react'; //import { arrayExtensions } from 'mobx/dist/internal';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch('/signedup', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        userStore.loading = false;\n        userStore.isLoggedin = true;\n        userStore.username = result.username; // axios.post('http://localhost:4000/app/signup', userStore)\n      } else {\n        userStore.loading = false;\n        userStore.isLoggedin = false;\n      }\n    } catch (e) {\n      userStore.loading = false;\n      userStore.isLoggedin = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        userStore.isLoggedin = false;\n        userStore.username = '';\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    if (userStore.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: \"Loading, please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this);\n    } else {\n      if (userStore.isLoggedin) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"Welcome \", userStore.username, /*#__PURE__*/_jsxDEV(SubmitButton, {\n              text: 'log out',\n              disabled: false,\n              onClick: () => this.doLogout()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = observer(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/Users/naomi/Downloads/web_react_project/frontend/src/App.js"],"names":["observer","userStore","LoginForm","InputField","SubmitButton","React","App","Component","componentDidMount","res","fetch","method","headers","result","json","success","loading","isLoggedin","username","e","doLogout","console","log","render"],"mappings":"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","sourcesContent":["import { observer } from 'mobx-react';\n\nimport userStore from './stores/userStore';\nimport LoginForm from './stores/LogginForm';\nimport InputField from './stores/InputField';\nimport SubmitButton from './stores/SubmitButton';\n\nimport './App.css';\nimport React from 'react';\n//import { arrayExtensions } from 'mobx/dist/internal';\n\n\n\nclass App extends React.Component {\n\n  async componentDidMount(){\n\n    try {\n\n      let res = await fetch('/signedup', {\n\n        method: 'post',\n        headers: {\n          \n          'Accept' : 'application/json',\n          'Content-type' : 'application/json'\n        }\n      });\n\n    let result = await res.json();\n      \n    if(result && result.success) {\n\n      userStore.loading = false;\n      userStore.isLoggedin = true;\n      userStore.username = result.username;\n     // axios.post('http://localhost:4000/app/signup', userStore)\n    }\n\n    else\n    {\n      userStore.loading = false;\n      userStore.isLoggedin = false;\n    }\n\n\n\n    }\n\ncatch(e) {\n\n  userStore.loading = false;\n  userStore.isLoggedin = false;\n  }\n\n}\n\n\n\n\nasync doLogout(){\n\n  try {\n\n    let res = await fetch('/logout', {\n\n      method: 'post',\n      headers: {\n        'Accept' : 'application/json',\n        'Content-Type' : 'application/json'\n      }\n    });\n\n  let result = await res.json();\n\n  if(result && result.success) {\n\n    userStore.isLoggedin = false;\n    userStore.username = '';\n  }\n\n  }\n\ncatch(e) {\n\nconsole.log(e)\n}\n\n}\n\n\n\n  render()\n  {\n\n    if(userStore.loading) {\n      return (\n        <div className='app'>\n          <div className='container'>\n          Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n\n    else {\n\n      if(userStore.isLoggedin) {\n\n        return (\n          <div className='app'>\n            <div className='container'>\n            Welcome {userStore.username}\n\n            <SubmitButton\n            text={'log out'}\n            disabled={false}\n            onClick={ () => this.doLogout()}\n            \n            />\n\n            </div>\n          </div>\n        );\n     }\n      \n    }\n\n    return (\n      <div className=\"app\">\n         <div className='container'>\n               \n           <LoginForm />\n           </div>\n      </div>\n    );  \n    }\n\n    \n}\n\nexport default observer(App);\n"]},"metadata":{},"sourceType":"module"}