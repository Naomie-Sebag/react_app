{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\naomi\\\\Downloads\\\\web_react_project\\\\frontend\\\\src\\\\components\\\\login.js\";\nimport React, { Component, useState } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport './navbar.css'; //import React, { useState } from \"react\";\n\nimport Welcome from './Welcome';\nimport Create from \"./create\"; // import ChatMain from './ChatMain';\n\nimport { BrowserRouter as Router, Route, Redirect, Switch, useHistory } from \"react-router-dom\"; // app.use(cookieParser(\"secretcode\"));\n// app.use(passport.initialize());\n// app.use(passport.session());\n//require(\"./passportConfig\")(passport);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends Component {\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => this.setState({\n      agreement: e.target.checked\n    });\n\n    this.onChangePersonName = this.onChangePersonName.bind(this); // this.onChangePersonPosition = this.onChangePersonPosition.bind(this);\n    // this.onChangePersonLevel = this.onChangePersonLevel.bind(this);\n\n    this.onChangePersonUserName = this.onChangePersonUserName.bind(this);\n    this.onChangePersonEmail = this.onChangePersonEmail.bind(this);\n    this.onChangePersonPassword = this.onChangePersonPassword.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      //   person_name: \"\",\n      //   person_position: \"\",\n      //   person_level: \"\",\n      fullName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      Manager: false\n    }; //this.redirect = <Route exact path=\"/Create\"/>\n  } // These methods will update the state properties.\n\n\n  onChangePersonName(e) {\n    this.setState({\n      fullName: e.target.value\n    });\n  }\n\n  onChangePersonUserName(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePersonPassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangePersonEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePersonPosition(e) {\n    this.setState({\n      person_position: e.target.value\n    });\n  }\n\n  onChangePersonLevel(e) {\n    this.setState({\n      person_level: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault(); //??localStorage.setItem('user', e.value);\n  }\n\n  // This function will handle the submission.\n  onSubmit(e) {\n    e.preventDefault(); // When post request is sent to the create url, axios will add a new record(newperson) to the database.\n\n    const newperson = {\n      \"fullName\": this.state.fullName,\n      \"username\": this.state.username,\n      \"email\": this.state.email,\n      \"password\": this.state.password\n    };\n    axios.post(\"http://localhost:4000/app/login\", newperson).then(res => {\n      console.log(res.data); // <Route exact path =\"/Welcome\" Component={Welcome} Redirect to={Welcome}/>\n      // res.redirect= {Welcome};//'/Welcome';\n      //<h1>hello</h1>\n      //<Create/>\n      // return this.redirect;\n      // return <header>HELLLLLLOOOOOOOOOOOOO</header>\n      // <Router exact path=\"/Welcome\" Component = {Welcome} />\n      //  <Link\n      // to={{\n      //   pathname: \"/Welcome\",\n      //   state: res // your data array of objects\n      // }}\n      ///>\n\n      window.location.href = '/Welcome'; // let history = useHistory();\n      //this.setState(res.data);\n\n      const userreq = [newperson.username];\n      localStorage.setItem(\"user\", JSON.stringify(userreq));\n      var user = JSON.parse(localStorage.getItem(\"user\"));\n      console.log(user);\n      this.props.history.push({\n        pathname: '/Welcome',\n        state: {\n          location: res.data\n        }\n      });\n    }).catch(error => console.log(error)); // We will empty the state after posting the data to the database\n\n    this.setState({\n      //   person_name: \"\",\n      //   person_position: \"\",\n      //   person_level: \"\",\n      fullName: \"\",\n      username: \"\",\n      password: \"\",\n      email: \"\"\n    });\n  } // This following section will display the form that takes the input from the user.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"UserName of the person: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.username,\n            onChange: this.onChangePersonUserName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Person's password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.password,\n            onChange: this.onChangePersonPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Login\",\n            className: \"btn btn-primary\",\n            onSubmit: this.onSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: this.state.agreement,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Users/naomi/Downloads/web_react_project/frontend/src/components/login.js"],"names":["React","Component","useState","axios","Welcome","Create","BrowserRouter","Router","Route","Redirect","Switch","useHistory","Login","constructor","props","handleChange","e","setState","agreement","target","checked","onChangePersonName","bind","onChangePersonUserName","onChangePersonEmail","onChangePersonPassword","onSubmit","handleSubmit","state","fullName","username","email","password","Manager","value","onChangePersonPosition","person_position","onChangePersonLevel","person_level","preventDefault","newperson","post","then","res","console","log","data","window","location","href","userreq","localStorage","setItem","JSON","stringify","user","parse","getItem","history","push","pathname","catch","error","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\n// This will require to npm install axios\r\nimport axios from 'axios';\r\nimport './navbar.css';\r\n//import React, { useState } from \"react\";\r\nimport Welcome from './Welcome';\r\nimport Create from \"./create\";\r\n// import ChatMain from './ChatMain';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch, useHistory } from \"react-router-dom\";\r\n// app.use(cookieParser(\"secretcode\"));\r\n// app.use(passport.initialize());\r\n// app.use(passport.session());\r\n//require(\"./passportConfig\")(passport);\r\n\r\n\r\nexport default class Login extends Component {\r\n  // This is the constructor that stores the data.\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangePersonName = this.onChangePersonName.bind(this);\r\n    // this.onChangePersonPosition = this.onChangePersonPosition.bind(this);\r\n    // this.onChangePersonLevel = this.onChangePersonLevel.bind(this);\r\n    this.onChangePersonUserName = this.onChangePersonUserName.bind(this);\r\n    this.onChangePersonEmail = this.onChangePersonEmail.bind(this);\r\n    this.onChangePersonPassword = this.onChangePersonPassword.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = {\r\n    //   person_name: \"\",\r\n    //   person_position: \"\",\r\n    //   person_level: \"\",\r\n    fullName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    Manager: false\r\n    };\r\n    //this.redirect = <Route exact path=\"/Create\"/>\r\n  }\r\n\r\n  // These methods will update the state properties.\r\n  onChangePersonName(e) {\r\n    this.setState({\r\n        fullName: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePersonUserName(e) {\r\n    this.setState({\r\n        username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePersonPassword(e) {\r\n    this.setState({\r\n        password: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePersonEmail(e) {\r\n    this.setState({\r\n        email: e.target.value,\r\n    });\r\n  }\r\n\r\n\r\n  onChangePersonPosition(e) {\r\n    this.setState({\r\n      person_position: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePersonLevel(e) {\r\n    this.setState({\r\n      person_level: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    //??localStorage.setItem('user', e.value);\r\n    \r\n}\r\n\r\nhandleChange = e => this.setState({ agreement: e.target.checked });\r\n\r\n// This function will handle the submission.\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n\r\n    \r\n    // When post request is sent to the create url, axios will add a new record(newperson) to the database.\r\n    const newperson = {\r\n   \r\n    \"fullName\": this.state.fullName,\r\n    \"username\": this.state.username,\r\n    \"email\": this.state.email,\r\n    \"password\": this.state.password\r\n\r\n    };\r\n\r\n    axios\r\n       .post(\"http://localhost:4000/app/login\", newperson)\r\n      .then((res) => {console.log(res.data);\r\n       // <Route exact path =\"/Welcome\" Component={Welcome} Redirect to={Welcome}/>\r\n   // res.redirect= {Welcome};//'/Welcome';\r\n        //<h1>hello</h1>\r\n        //<Create/>\r\n      // return this.redirect;\r\n     // return <header>HELLLLLLOOOOOOOOOOOOO</header>\r\n   // <Router exact path=\"/Welcome\" Component = {Welcome} />\r\n  //  <Link\r\n  // to={{\r\n  //   pathname: \"/Welcome\",\r\n  //   state: res // your data array of objects\r\n  // }}\r\n///>\r\n   window.location.href = '/Welcome';\r\n  // let history = useHistory();\r\n  //this.setState(res.data);\r\n  const userreq = [newperson.username];\r\n  localStorage.setItem(\"user\", JSON.stringify(userreq));\r\n  var user = JSON.parse(localStorage.getItem(\"user\"));\r\n  console.log(user);\r\n   this.props.history.push({pathname:'/Welcome', state:{location:res.data}});\r\n      })\r\n\r\n      \r\n      .catch((error) => console.log(error));\r\n\r\n      \r\n    // We will empty the state after posting the data to the database\r\n    this.setState({\r\n    //   person_name: \"\",\r\n    //   person_position: \"\",\r\n    //   person_level: \"\",\r\n    fullName: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\"\r\n    });\r\n  }\r\n\r\n  // This following section will display the form that takes the input from the user.\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: 20 }}>\r\n        <h3>Login</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>UserName of the person: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n            value={this.state.username}\r\n              onChange={this.onChangePersonUserName}\r\n            />\r\n          </div>\r\n         \r\n          <div className=\"form-group\">\r\n            <label>Person's password: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.password}\r\n              onChange={this.onChangePersonPassword}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Login\"\r\n              className=\"btn btn-primary\"\r\n              onSubmit={this.onSubmit}\r\n              \r\n            />\r\n           \r\n          \r\n        <div>\r\n          <label>\r\n            <input type=\"checkbox\" \r\n              checked={this.state.agreement} \r\n              onChange={this.handleChange} />\r\n            <span>Manager</span>\r\n          </label>\r\n        </div>\r\n\r\n          </div>\r\n        </form>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}